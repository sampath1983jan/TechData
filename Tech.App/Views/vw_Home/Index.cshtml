@{
    ViewBag.Title = "Home Page";
}
<style type="text/css">
    .mar {
        padding-top: 5px;
        padding-bottom: 5px;
    }
</style>




<div class="row">
    <div class="col-lg-12">
        <h3>Entity Schema</h3>
    </div>
   

</div>

<div style="margin:10px 0px 10px 0px;"></div>
<div class="container">
    <div class="row mar">
        <div style="" class="col-md-3">
            <div id="clientlist"></div>
        </div>
        <div style="" class="col-md-3">
            <div class="col-md-12">Table List</div>
            <input type="text" id="txtSearch" />
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class='col-md-6'>Field Name</div>
                <div class='col-md-2'>Field Type</div>
                <div class='col-md-2'>Size </div>
                <div class='col-md-2'>Is Primarykey</div>
            </div>
        </div>
    </div>
    <div class="row mar">

        <div id="tblist" style="height:500px; overflow-y:auto; overflow-x:hidden" class="col-md-4">

        </div>

        <div style=" overflow-y:auto" class="col-md-8">
            <input type="button" id="showdata" value="Show Data" />
            <div class="" id="fields">

            </div>
        </div>
    </div>
    <div class="row mar">
        <div id="ttrc"></div><div><input type="text" id="txtPageNo" /></div>
        <div id="datalist"></div>
        <div id="nCard"></div>
    </div>
</div>

<script>
    // todo work area
    $(document).ready(function () {
    //    d3.select("#list").selectAll("li")
    //        .data([10, 20, 30, 25, 15])
    //        .text(function (d) { return "<b>This is pre-existing element and the value is </b>" + d; })
    //        .enter()
    //        .append("li")
    //        .text(function (d) { return "This is dynamically created element and the value is " + d; });

    //    var width = 400;
    //    var height = 300;
    //    var svg = d3.select("#svgcontainer")
    //        .append("svg").attr("width", width).attr("height", height);
    //    $('#sauce').on('click', function () { alert("item"); });
    // todo work area

       
        //svg.append("line")
        //    .attr("x1", 0)
        //    .attr("y1", 0)
        //    .attr("x2", 100)
        //    .attr("y2", 200)
        //    .style("stroke", "rgb(255,0,0)")
        //    .style("stroke-width", 2);
        //svg.append("rect")
        //    .attr("x", 100)
        //    .attr("y", 0)
        //    .attr("width", 200)
        //    .attr("height", 100)
        //    .style("stroke", "rgb(255,0,0)")
        //    .attr("fill", "red")
        //    .style("stroke-width", 1)
        //    .attr("transform", "rotate(10) Skew(20,20) ");

        //svg.append("circle")
        //    .attr("cx", 200)
        //    .attr("cy", 50)
        //    .attr("r", 30)
        //    .attr("fill", "#999");
        //svg.append("circle")
        //    .attr("cx", 200)
        //    .attr("cy", 50)
        //    .attr("r", 20)
        //    .attr("fill", "#fff");

        //var t = d3.transition()
        //    .duration(2000);
        //d3.select("rect")
        //    .transition(t)
        //    .style("width", "300");

        //var data = [1, 1, 2, 3, 5, 8, 13];
        //var data = [1, 1, 2, 3, 5, 8, 13];
        //var canvas = document.querySelector("canvas"),
        //    context = canvas.getContext("2d");

        //var width = canvas.width,
        //    height = canvas.height,
        //    radius = Math.min(width, height) / 2;

        //var colors = [
        //    "#1f77b4", "#ff7f0e", "#2ca02c", "#d62728", "#9467bd",
        //    "#8c564b", "#e377c2", "#7f7f7f", "#bcbd22", "#17becf"
        //];

        //var arc = d3.arc()
        //    .outerRadius(radius - 10)
        //    .innerRadius(0)
        //    .padAngle(0.03)
        //    .context(context);

        //var pie = d3.pie();

        //var arcs = pie(data);

        //context.translate(width / 2, height / 2);

        //context.globalAlpha = 0.5;
        //arcs.forEach(function (d, i) {
        //    context.beginPath();
        //    arc(d);
        //    context.fillStyle = colors[i];
        //    context.fill();
        //});

        //context.globalAlpha = 1;
        //context.beginPath();
        //arcs.forEach(arc);
        //context.lineWidth = 1.5;
        //context.stroke();


   });
</script>