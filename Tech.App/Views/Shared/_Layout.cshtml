@using CustomAuthentication

<!DOCTYPE html>
<html>
<head>
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,300,300i,400,400i&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,400&display=swap" rel="stylesheet">
    <script src="~/Scripts/Controls/interact.js"></script>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Scripts/Controls/NumberSlider/Numberslider.css" rel="stylesheet" />
    @*<script src="~/Scripts/requires.js"></script>
        <script type="text/javascript">
            require.config({
                // Add this map config in addition to any baseUrl or
                // paths config you may already have in the project.
                map: {
                    // '*' means all modules will get 'jquery-private'
                    // for their 'jquery' dependency.
                    '*': { 'jquery': 'jquery-private' },

                    // 'jquery-private' wants the real jQuery module
                    // though. If this line was not here, there would
                    // be an unresolvable cyclic dependency.
                    'jquery-private': { 'jquery': 'jquery' }
                }
            });

            // and the 'jquery-private' module, in the
            // jquery-private.js file:
            //define(['jquery'], function (jq) {
            //    return jq.noConflict(true);
            //});
            //require(['jquery'], function ($) {
            //    console.log($) // OK
            //});

            //require(['jquery'], function (jq) {
            //    console.log(jq) // OK
            //});

            require(['/Scripts/jquery-3.3.1.js', '/Scripts/jquery-ui.js'], function ($, ajax, otherModule) {
                // Modules that do stuff on every page are instantiated here
            });

        </script>*@

    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Styles.Render("~/Content/appstyle")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")


    @*<script type="text/javascript" src="https://unpkg.com/popper.js@1.14.7/dist/umd/popper.js"></script>*@
    @Scripts.Render("~/bundles/jqueryui")


    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/d3.js"></script>
    @*<script src="~/Scripts/WebChat.js"></script>*@
    @RenderSection("scripts", required: false)

    <script src="~/Scripts/Controls/Control-vue.js"></script>



    <link href="~/Content/NT-Node.css" rel="stylesheet" />
    <link href="https://cdn.botframework.com/botframework-webchat/latest/botchat.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.10/lodash.js"></script>





    <script src="~/Scripts/NT/NT.js"></script>
    <script src="~/Scripts/NT/NT-NodeEdge.js"></script>
    <script src="~/Scripts/NT/NT-Node.js"></script>
    <script src="~/Scripts/NT/ComponentModal.js"></script>
    <script src="~/Scripts/NT/NT-context.js"></script>

    <script src="~/Scripts/Jcookie.js"></script>


    <script src="https://unpkg.com/vue/dist/vue.js"></script>
    @*<script src="~/Scripts/vue/vue.esm.js"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/es6-promise@4/dist/es6-promise.auto.min.js"></script>

    <script src="https://unpkg.com/vue-router/dist/vue-router.js"></script>
    <script src="https://unpkg.com/http-vue-loader"></script>
    <script src="~/Scripts/requires.js"></script>


    @*<script src="~/Scripts/ace/ace.js"></script>*@
    <style>
        .feedback {
            background-color: #fff;
            color: #000000;
            border-left: 5px solid #227f85;
        }
    </style>
</head>
<body>


    <div id="header_container">
        <div id="header">
           
            <span style="color:#fff !important">

                @if (HttpContext.Current.User.Identity.IsAuthenticated)
                {
                    var identity = ((CustomPrincipal)HttpContext.Current.User);
                    @:<nav id="navHeader" class="navbar navbar-expand-lg navbar-light" style="padding:0px">
                        @:<div class="navbar-collapse" style="background-color:#ff006e; color:#fff !important">
                            @:<ul class="navbar-nav">    
    @:<li class="nav-item active"><a class="nav-link " style="color:#fff" href="/Home/Index">Home</a></li>
    
    @:<li class="nav-item"><a class="nav-link" style="color:#fff" href="/Schema/Schema">Schema</a></li>
    
    @:<li class="nav-item"><a class="nav-link" style="color:#fff" href="/Server/Server">Server</a></li>
    
    @:<li class="nav-item "><a class="nav-link" style="color:#fff" href="/Client/Client">Client</a></li>
    
    @:<li class="nav-item "><a class="nav-link" style="color:#fff" href="/App/Index">App Manager</a></li>
    
    @:<li class="nav-item "><a class="nav-link" style="color:#fff" href="/Schema/DataScript">Data Script</a></li>
    
    @:<li class="nav-item "><a class="nav-link" style="color:#fff" href="/Modules/home">Modules</a></li>
    
    @:<li class="nav-item"><div id="clnt" style="width:200px;padding-top:3px;" class="nav-link"></div></li>
    
@:</ul>
                            @:<ul class="navbar-nav flex-row ml-md-auto d-none d-md-flex">
                                @:<li class="nav-item" style="float:right"><a class="nav-link" style="color:#fff" href="/Authentication/LogOut">@Html.Label(string.Format("{0} {1}", identity.FirstName, identity.LastName))</a></li>
                                @:<li class="nav-item" style="float:right"><a class="nav-link" style="color:#fff" href="/Authentication/LogOut">Log out</a></li>

                            @:</ul>

                        @:</div>
                    @:</nav>
                     

                }
            </span>
        </div>
    </div>

    <div class="">
        @RenderBody()
        <div id="tzContainer">
            <div>
                <toaster :toas="tos" :id="id" ref="foo" :position="position" :type="toasterType">

                </toaster>
            </div>
        </div>
        <div id="tzFeedback">
            <div>
                <toaster :toas="tos" :id="id" ref="foo" :position="position" :type="toasterType">

                </toaster>
            </div>
        </div>
        <hr />




    </div>




    <script type="text/javascript">
        var table = "";
        var currentPage = 0;
        var tbList = [];
        var clientid = "";

        $(document).ready(function () {


            require(["/vue/Controls/toast.js"], function (roster) {
                
                Window.toz = new Vue({
                    components: {
                        "toaster": roster
                    }, data: function () {
                        return {
                            tos: [],
                            id: "tosz",
                            "position": "right top",
                            toasterType: "linear",
                        }
                    }
                }).$mount('#tzContainer');

                Window.feedback = new Vue({
                    components: {
                        "toaster": roster
                    }, data: function () {
                        return {
                            tos: [],
                            id: "tozfeedback",
                            "position": "right bottom",
                            toasterType: "linear",
                        }
                    }
                }).$mount('#tzFeedback');

            });
       

            $("#navHeader").find("a").click(function () {
                $("#navHeader").find("li").removeClass("active");
                $(this).parent().addClass("active");
            });


            function bindTables(data) {
                $("#tblist").html("");
                $.each(data, function (i, d) {
                    $("#tblist").append("<div class='row mar'><div class='col-md-12'><a style='cursor:pointer' t='" + d.Name + "'>" + d.Name + "</a></div></div>");
                })
                $("#tblist a").click(function () {
                    var name = $(this).attr("t");
                    tbName = name;
                    getField(name);
                })
            }
            renderClients = function () {
                //    function loadClients() {
                $.ajax('/Client/Gets',
                    {
                        type: "GET",
                        dataType: 'jsonp', // type of response data
                        data: "",
                        // timeout milliseconds
                        success: function (data, status, xhr) {   // success callback function
                            $("#clientlist").html("");
                            var dv = "<div class='row'>"
                            $.each(data, function (i, d) {
                                dv = dv + "<div class='col-md-12'><a href='#' name='" + d.ClientID + "'>" + d.OrganizationName + "-" + d.ClientName + "-" + d.ClientNo + "</a></div>";
                            })
                            dv = dv + "</div>"
                            $("#clientlist").append(dv);
                            $("#clientlist").find("a").click(function () {
                                clientid = $(this).attr("name");
                                renderTables();
                            })
                        },
                        error: function (jqXhr, textStatus, errorMessage) { // error callback
                            alert(errorMessage);
                            //$('p').append('Error: ' + errorMessage);
                        }
                    });
                // }
            }
            renderTables = function () {

                $.ajax({
                    type: "POST",
                    url: "/Home/GetEntity",
                    data: JSON.stringify({ clientid: clientid }),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        data = JSON.parse(data);
                        tbList = data;
                        bindTables(data);
                    },
                    error: function () {
                        alert("Error occured!!")
                    }
                });
            }

            $("#txtSearch").keyup(function () {
                var val = $(this).val();
                if (val == "") {
                    newdataset = tbList;
                } else {
                    var newdataset = $.grep(tbList, function (v) {
                        return v.Name.indexOf(val) == 0;
                    });
                }
                bindTables(newdataset);
            });

            function renderGrid() {
                $.ajax({
                    type: "POST",
                    url: "/Home/GetData",
                    data: JSON.stringify({ tb: tbName, currentPage: currentPage, PageSize: 10, clientid: clientid }),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        $("#txtPageNo").val(currentPage);
                        data = JSON.parse(data);
                        Page = data.Page;
                        data = data.Data;
                        var keys = [];
                        if (data.length > 0) {
                            for (var key in data[0]) {
                                keys.push(key);
                            }
                        }
                        $("#datalist").html("");

                        //datalist


                        str = "<table style='width:100%'>"
                        str = str + "<tr>";
                        $.each(keys, function (ir, r) {

                            str = str + "<td>" + r + "</td>";

                        });
                        str = str + "</tr>";
                        $.each(data, function (ir, r) {
                            str = str + "<tr>";
                            $.each(keys, function (ic, c) {
                                str = str + "<td>" + r[c] + "</td>";
                            })
                            str = str + "</tr>";
                        });
                        str = str + "</table>";
                        $("#datalist").append(str);
                        $("#ttrc").html("<h3> Total Record in this table:" + Page.TotalRecord + "</h3>");

                        //data = data.Columns;
                        //$.each(data, function (i, d) {
                        //    $("#fields").append("<div class='row mar'><div class='col-md-6'>" + d.Name + "</div><div class='col-md-2'>" + d.NativeType + "</div><div class='col-md-2'>" + d.Size + "</div><div class='col-md-2'>" + d.PrimaryKey + "</div></div>");
                        //})
                    },
                    error: function () {
                        alert("Error occured!!")
                    }
                });
            }
            $("#showdata").click(function () {
                $("#txtPageNo").blur(function () {
                    var v = $(this).val();
                    if (v != "") {
                        currentPage = v;
                    }
                    renderGrid();
                })
                renderGrid();

                //$("#nCard").modalwindow({ id: 'win' });
                //$("#nCard").modalwindow('open');

            })
            function getField(tbName) {
                $.ajax({
                    type: "POST",
                    url: "/Home/GetFields",
                    data: JSON.stringify({ tb: tbName, clientid: clientid }),
                    dataType: "json",
                    contentType: 'application/json; charset=utf-8',
                    success: function (data) {
                        $("#fields").html("");
                        $("#txtPageNo").val(0);
                        data = JSON.parse(data);
                        data = data.Columns;
                        $.each(data, function (i, d) {
                            $("#fields").append("<div class='row mar'><div class='col-md-6'>" + d.Name + "</div><div class='col-md-2'>" + d.NativeType + "</div><div class='col-md-2'>" + d.Size + "</div><div class='col-md-2'>" + d.PrimaryKey + "</div></div>");
                        })

                    },
                    error: function () {
                        alert("Error occured!!")
                    }
                });
            }
            renderClients();


            var getClientlist = function (onComplete) {
                $.ajax('/Client/Gets',
                    {
                        type: "GET",
                        dataType: 'jsonp', // type of response data
                        data: "",
                        // timeout milliseconds
                        success: function (data, status, xhr) {   // success callback function
                            $("#lftSchemacnt").html("");
                            onComplete(data);
                        },
                        error: function (jqXhr, textStatus, errorMessage) { // error callback

                            //$('p').append('Error: ' + errorMessage);
                        }
                    });
            }
            getClientlist(function (data) {
                window.clientid = "";
                if (data.length > 0) {
                    var al = $.cookie('clientkey');
                    if (al != undefined && al != null) {
                        window.clientid = al;
                    } else {
                        window.clientid = data[0].ClientID;
                        $.cookie('clientkey', window.clientid);
                    }

                }

                if ($("#clnt")[0] != null) {
                    $("#clnt").Input({
                        id: "cmbClient", limit: true, maxlength: 15,
                        'note': "",
                        'regexp': "", inputType: 19, textType: 1,
                        selectPicker: {
                            datasource: data,
                            valueField: "ClientID",
                            displayField: "OrganizationName",
                            defaultSelection: "Choose Client",
                            groupField: "",
                            width: "300px",
                            onSelected: function (v) {                              
                                if (window.clientid != v) {
                                    window.clientid = v;
                                    $.cookie('clientkey', window.clientid);
                                    location.reload();
                                }
                            },
                            container: "body",
                            dropupAuto: true,
                            width: 'auto',
                            noneSelectedText: "Nothing Selected",
                            noneResultsText: "No result found",
                            selection: 'single', // single,multiple'
                        }
                    });
                    $("#clnt").Input("text", window.clientid);
                }
            })


            //window.WebChat.renderWebChat({
            //            directLine: window.WebChat.createDirectLine({
            //                token: "y0qs3BIyoLE.CRrz91tTYwaror0MIJbaqZEe7OxoGmGjyZUvShqBQdQ"
            //            }), userID: 'YOUR_USER_ID',
            //    username: 'Web Chat User',
            //    locale: 'en-US',
            //    botAvatarInitials: 'WC',
            //    userAvatarInitials: 'WW'
            //}, document.getElementById('webchat'));


            //window.fetch('https://elizaadevt.azurewebsites.net/directline/token', { method: 'POST' })
            //    .then(function (res) {
            //        return res.json();
            //    })
            //    .then(function (json) {
            //        const token = json.token;
            //        window.WebChat.renderWebChat({
            //            directLine: window.WebChat.createDirectLine({
            //                token: token
            //            })
            //        }, document.getElementById('webchat'));
            //        document.querySelector('#webchat > *').focus();
            //    });

            //(async function () {
            //    // In this demo, we are using Direct Line token from MockBot.
            //    // To talk to your bot, you should use the token exchanged using your Direct Line secret.
            //    // You should never put the Direct Line secret in the browser or client app.
            //    // https://docs.microsoft.com/en-us/azure/bot-service/rest-api/bot-framework-rest-direct-line-3-0-authentication

            //    const res = await fetch('https://elizaadevt.azurewebsites.net/directline/token', { method: 'POST' });
            //    const { token } = await res.json();

            //    window.WebChat.renderWebChat({
            //        directLine: window.WebChat.createDirectLine({ token })
            //    }, document.getElementById('webchat'));

            //    document.querySelector('#webchat > *').focus();
            //})().catch(err => console.error(err));

            //$("#nCard").namecard({
            //    title: "personal information",
            //    header: "Employee ",
            //    bodyTemplate: 'Some quick example text to build on the card title and make up the bulk of the card`s content',
            //    image: '', //'https://www.planwallpaper.com/static/images/adirondacks-sun-beams-640x300.jpg',
            //    imagePosition: 'bottom',
            //    footerTemplate: '<small class="text-muted">welcome to name card <a href="#" class="card-link">Go somewhere</a></small>',
            //    theme: "",
            //    align: 'left'
            //})



        });



    </script>
   
</body>
</html>
